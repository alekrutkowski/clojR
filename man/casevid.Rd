% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/cond_case.R
\name{casevid}
\alias{casevid}
\title{A vectorised version of clojR::case (with vectorised identity function)}
\usage{
casevid(obj, ...)
}
\arguments{
\item{obj}{An object/value.}

\item{...}{An odd number of expressions. A set of test/expression
pairs plus an expression to be evalauted if all tests fail. Equivalent
of nested \code{ifelse(iden(x,a), b, c)} calls, where \code{x} are elements
of the \code{obj} vector and iden is a vectorised base::identity function.}
}
\description{
See \url{https://clojuredocs.org/clojure.core/case}.
}
\examples{
casevid(x,
          Inf,            "infinity",
          as.numeric(NA), "not available",
                          "other")
# Is transformed to:
# ifelse(iden(x, Inf), "infinity",
#        ifelse(iden(x, as.numeric(NA)), "not available",
#               "other"))
}

